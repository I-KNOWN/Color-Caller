// Generated by view binder compiler. Do not edit!
package com.uprisingscallscreen.theme.flashscreen.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.uprisingscallscreen.theme.flashscreen.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CheckboxBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout layoutRoot;

  @NonNull
  public final CheckBox skip;

  @NonNull
  public final TextView tvallow;

  @NonNull
  public final TextView tvptext;

  @NonNull
  public final TextView tvptitle;

  private CheckboxBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout layoutRoot,
      @NonNull CheckBox skip, @NonNull TextView tvallow, @NonNull TextView tvptext,
      @NonNull TextView tvptitle) {
    this.rootView = rootView;
    this.layoutRoot = layoutRoot;
    this.skip = skip;
    this.tvallow = tvallow;
    this.tvptext = tvptext;
    this.tvptitle = tvptitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CheckboxBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CheckboxBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.checkbox, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CheckboxBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout layoutRoot = (LinearLayout) rootView;

      id = R.id.skip;
      CheckBox skip = ViewBindings.findChildViewById(rootView, id);
      if (skip == null) {
        break missingId;
      }

      id = R.id.tvallow;
      TextView tvallow = ViewBindings.findChildViewById(rootView, id);
      if (tvallow == null) {
        break missingId;
      }

      id = R.id.tvptext;
      TextView tvptext = ViewBindings.findChildViewById(rootView, id);
      if (tvptext == null) {
        break missingId;
      }

      id = R.id.tvptitle;
      TextView tvptitle = ViewBindings.findChildViewById(rootView, id);
      if (tvptitle == null) {
        break missingId;
      }

      return new CheckboxBinding((LinearLayout) rootView, layoutRoot, skip, tvallow, tvptext,
          tvptitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
