// Generated by view binder compiler. Do not edit!
package com.uprisingscallscreen.theme.flashscreen.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.uprisingscallscreen.theme.flashscreen.R;
import com.uprisingscallscreen.theme.flashscreen.callertheme.custom.BoldText;
import com.uprisingscallscreen.theme.flashscreen.callertheme.custom.FullScreenVideoView;
import com.uprisingscallscreen.theme.flashscreen.callertheme.custom.MediumText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityShowBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView imTitle;

  @NonNull
  public final LinearLayout llStatus;

  @NonNull
  public final LinearLayout llTitle;

  @NonNull
  public final BoldText tvApply;

  @NonNull
  public final MediumText tvStatus;

  @NonNull
  public final BoldText tvTitle;

  @NonNull
  public final View vStatus;

  @NonNull
  public final View vTitle;

  @NonNull
  public final FullScreenVideoView vv;

  private ActivityShowBinding(@NonNull RelativeLayout rootView, @NonNull ImageView imTitle,
      @NonNull LinearLayout llStatus, @NonNull LinearLayout llTitle, @NonNull BoldText tvApply,
      @NonNull MediumText tvStatus, @NonNull BoldText tvTitle, @NonNull View vStatus,
      @NonNull View vTitle, @NonNull FullScreenVideoView vv) {
    this.rootView = rootView;
    this.imTitle = imTitle;
    this.llStatus = llStatus;
    this.llTitle = llTitle;
    this.tvApply = tvApply;
    this.tvStatus = tvStatus;
    this.tvTitle = tvTitle;
    this.vStatus = vStatus;
    this.vTitle = vTitle;
    this.vv = vv;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityShowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityShowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_show, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityShowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.im_title;
      ImageView imTitle = ViewBindings.findChildViewById(rootView, id);
      if (imTitle == null) {
        break missingId;
      }

      id = R.id.ll_status;
      LinearLayout llStatus = ViewBindings.findChildViewById(rootView, id);
      if (llStatus == null) {
        break missingId;
      }

      id = R.id.ll_title;
      LinearLayout llTitle = ViewBindings.findChildViewById(rootView, id);
      if (llTitle == null) {
        break missingId;
      }

      id = R.id.tv_apply;
      BoldText tvApply = ViewBindings.findChildViewById(rootView, id);
      if (tvApply == null) {
        break missingId;
      }

      id = R.id.tv_status;
      MediumText tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      id = R.id.tv_title;
      BoldText tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.v_status;
      View vStatus = ViewBindings.findChildViewById(rootView, id);
      if (vStatus == null) {
        break missingId;
      }

      id = R.id.v_title;
      View vTitle = ViewBindings.findChildViewById(rootView, id);
      if (vTitle == null) {
        break missingId;
      }

      id = R.id.vv;
      FullScreenVideoView vv = ViewBindings.findChildViewById(rootView, id);
      if (vv == null) {
        break missingId;
      }

      return new ActivityShowBinding((RelativeLayout) rootView, imTitle, llStatus, llTitle, tvApply,
          tvStatus, tvTitle, vStatus, vTitle, vv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
